      Git学习笔记
1.全局配置：git config --global user.name "<名称>"
           git config --global user.email "<邮箱>"
2.初始仓库：git init
3.提交文件：git add <文件名1> <文件名2>  git commit -m "<备注>"
          全部添加：git add .
4.时光穿梭：回到过去版本，也可再回到未来版本git reflog
5.查看当前目录：dir
6.查看文件内容：cat <文件>
7.清屏：reset  （可能有点慢）
8.git chectout -- <文件> 丢弃现有工作区修改，回到最近一次add或commit
9.删除：rm <file>相当于资源管理器中删除
       git rm <file>版本库中删除，最后提交 git commit -m "<备注>"
10.打印日志：git log 简介显示，可加上参数 --pretty=oneline
11.查看状态：git status
12.远程：git remote add origin git@github.com:Alex-184029/try1.git
    try1为github上的远程仓库名
13.初次连接需要SSH配置，网上有教程
14.推送远程：
  初次：git push -u origin master
  修改：git push origin master
15.从远程克隆：git clone git@github.com:Alex-184029/gitskills.git
            也可直接git clone <github域名https......>
16.分支：
  主分支master
  创建并切换分支：git checkout -b <分支名> || git switch -c <分支名>
  查看当前分支：git branch（当前分支前面有一个*符号）
  切换分支：git checkout <分支名>  || git switch <已有分支>
  分支合并：git merge <欲合并分支>  （合并到当前）
  删除分支：git branch -d <分支名>  （d改成D可强行删除未merge的分支）
17.暂存：
  1.开启：git stash
  2.查看：git stash list
  3.恢复：git stash apply    4.删除：git stashdrop
  5.恢复+删除：git stash pop
18.远程协作：
  1.查看远程：git remote  ||  git remote -v（更详细）
  2.推送分支：git push origin <分支名>
  3.抓取分支：git pull
  4.注意解决分支冲突
19.rebase：push分叉提交整理成直线，更直观
20.标签tag：与commit挂钩，代替数字编号
21.国内类似GitHub：码云，Gitee
